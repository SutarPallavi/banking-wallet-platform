version: "3.8"

name: banking-wallet-platform

services:
  # Infrastructure
  postgres:
    image: postgres:16
    environment:
      POSTGRES_USER: wallet
      POSTGRES_PASSWORD: wallet
      POSTGRES_DB: wallet
    ports:
      - "5432:5432"
    volumes:
      - db-data:/var/lib/postgresql/data

  mongo:
    image: mongo:7
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db

  redis:
    image: redis:7
    ports:
      - "6379:6379"

  zookeeper:
    image: confluentinc/cp-zookeeper:7.6.1
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.6.1
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  # Platform Services
  config-server:
    build: ./config-server
    environment:
      SPRING_PROFILES_ACTIVE: native
      SPRING_CLOUD_CONFIG_SERVER_NATIVE_SEARCH_LOCATIONS: file:/config-repo
    volumes:
      - ./config-repo:/config-repo:ro
    ports:
      - "8888:8888"

  discovery-service:
    build: ./discovery-service
    depends_on:
      - config-server
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_CLOUD_CONFIG_URI: http://config-server:8888
    ports:
      - "8761:8761"

  auth-service:
    build: ./auth-service
    depends_on:
      - discovery-service
      - config-server
    environment:
      SERVER_PORT: 9000
      SPRING_CLOUD_CONFIG_URI: http://config-server:8888
    ports:
      - "9000:9000"

  api-gateway:
    build: ./api-gateway
    depends_on:
      - discovery-service
      - config-server
      - redis
    environment:
      SERVER_PORT: 8080
      SPRING_CLOUD_CONFIG_URI: http://config-server:8888
      SPRING_DATA_REDIS_HOST: redis
      SPRING_DATA_REDIS_PORT: 6379
    ports:
      - "8080:8080"

  account-service:
    build: ./account-service
    depends_on:
      - discovery-service
      - config-server
      - postgres
      - mongo
      - kafka
    environment:
      SPRING_CLOUD_CONFIG_URI: http://config-server:8888
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/wallet
      SPRING_DATASOURCE_USERNAME: wallet
      SPRING_DATASOURCE_PASSWORD: wallet
      SPRING_DATA_MONGODB_URI: mongodb://mongo:27017/wallet
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092

  transaction-service:
    build: ./transaction-service
    depends_on:
      - discovery-service
      - config-server
      - postgres
      - mongo
      - redis
      - kafka
    environment:
      SPRING_CLOUD_CONFIG_URI: http://config-server:8888
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/wallet
      SPRING_DATASOURCE_USERNAME: wallet
      SPRING_DATASOURCE_PASSWORD: wallet
      SPRING_DATA_MONGODB_URI: mongodb://mongo:27017/wallet
      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PORT: 6379
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092

  payment-service:
    build: ./payment-service
    depends_on:
      - discovery-service
      - config-server
      - postgres
      - mongo
      - kafka
    environment:
      SPRING_CLOUD_CONFIG_URI: http://config-server:8888
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/wallet
      SPRING_DATASOURCE_USERNAME: wallet
      SPRING_DATASOURCE_PASSWORD: wallet
      SPRING_DATA_MONGODB_URI: mongodb://mongo:27017/wallet
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092

  notification-service:
    build: ./notification-service
    depends_on:
      - discovery-service
      - config-server
      - mongo
      - kafka
    environment:
      SPRING_CLOUD_CONFIG_URI: http://config-server:8888
      SPRING_DATA_MONGODB_URI: mongodb://mongo:27017/wallet
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092

# Add infrastructure services here as you build out the platform, for example:
#   postgres:
#     image: postgres:16
#     environment:
#       POSTGRES_USER: wallet
#       POSTGRES_PASSWORD: wallet
#       POSTGRES_DB: wallet
#     ports:
#       - "5432:5432"
#     volumes:
#       - db-data:/var/lib/postgresql/data
#
#   redis:
#     image: redis:7
#     ports:
#       - "6379:6379"
#
#   rabbitmq:
#     image: rabbitmq:3-management
#     ports:
#       - "5672:5672"
#       - "15672:15672"

networks:
  default:
    name: banking-wallet-network

volumes:
  db-data:
    name: banking-wallet-db-data
  mongo-data:
    name: banking-wallet-mongo-data


